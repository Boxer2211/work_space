Netlify.com - Бескоштовний хостинг
figma.com - онлайн створювання проекту та його зчитування
avacode - створювання проекту та його зчитування
github.com/Boxer2211 - git для розміщення файлів
prepros - приложение компилятор препроцессор scss
Visual Studio Code - програма в якій писати код (плагіни: live server, eCSStractor for VS code)
https://tympanus.net/codrops/  - сайт с анимациями 
https://codepen.io/ - сайт с анимациями
https://animista.net/play/basic/flip-2 - сайт для создания анимации

_____________________________________________________________________________________________________________


npm init - инициализация npm

npm istall jquery - подключение библиотеки 

npm update - для обновления npm
_____________________________________________________________________________________________________________
WebPack

npm install --save-dev webpack

Установим также Webpack CLI:
npm install --save-dev webpack-cli

После создадим конфигурационный файл с именем webpack.config.js и следующим содержимым:

module.exports = {
	entry: './index.js',
	output: {
		filename: './bundle.js',
	}
};

Для удобного вызова Webpack в файл package.json добавим следующую настройку:

"scripts" : {
	"build" : "webpack"
}

После этого можно вызывать наш сборщик:

npm run build
После вызова этой команды произойдет следующее: сборщик возьмет файл index.js, посмотрит, какие модули подключены к этому файлу, и соберет весь код в один файл dist/bundle.js.

Затем нам нужно сделать HTML файл и подключить к нему результат сборки:

<html>
	<head>
		<script defer src="bundle.js"></script>
	</head>
	<body>
		...
	</body>
</html>
_____________________________________________________________________________________________________________
Для установки фреймворка вам понадобятся NodeJS не ниже версии 8.10 и npm не ниже версии 5.6 на вашем компьютере. Для создания проекта в командной строке выполните следующие команды:

npx create-react-app my-app
cd my-app
npm start
После этого у вас появится папка my-app, содержащая в себе фреймворк. Найдите в этой папке папку src - это будет ваша рабочая папка, в которой вы будете вести разработку вашего проекта.

В папке src найдите файл App.js. Ближайшие уроки этот файл будет вашим основным рабочим файлом. В нем вы будете писать код, наблюдая его результаты в окне браузера.

Откройте этот файл в редакторе и удалите из него все лишнее, приведя его вот к такому виду:

import React from 'react';

function App() {
	return <div>
		text
	</div>;
}

export default App;
После того, как ваш проект установлен, для следующего запуска (например, после перезагрузки компьютера) вам достаточно будет перейти через терминал в папку my-app и выполнить следующую команду:

npm start
_____________________________________________________________________________________________________________
Давайте для начала научимся выполнять переход по папкам. Это делает команда команду cd.

Пусть рабочей папкой нашего терминала является папка xxx. Давайте перейдем на папку aaa, находящуюся внутри нее:

/xxx$ cd aaa
Теперь перейдем в папку zzz, находящуюся внутри aaa:

/xxx/aaa$ cd zzz
Если в качестве имени папки указать две точки, то осуществится переход на одну папку вверх:

/xxx/aaa/zzz$ cd ..
_____________________________________________________________________________________________________________
_____________________________________________________________________________________________________________
_____________________________________________________________________________________________________________
_____________________________________________________________________________________________________________

